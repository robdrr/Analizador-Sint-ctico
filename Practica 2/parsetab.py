
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS IDENTIFIER LPAREN NUMBER PLUS RPAREN SEMICOLON TIMESprogram : assignment\n| assignment programassignment : IDENTIFIER EQUALS expression SEMICOLONexpression : term\n| term PLUS expressionterm : factor\n| factor TIMES term\n| factor DIVIDE termfactor : IDENTIFIER\n| NUMBER\n| LPAREN expression RPAREN'
    
_lr_action_items = {'IDENTIFIER':([0,2,5,11,12,13,14,15,],[3,3,6,6,-3,6,6,6,]),'$end':([1,2,4,12,],[0,-1,-2,-3,]),'EQUALS':([3,],[5,]),'NUMBER':([5,11,13,14,15,],[10,10,10,10,10,]),'LPAREN':([5,11,13,14,15,],[11,11,11,11,11,]),'TIMES':([6,9,10,20,],[-9,14,-10,-11,]),'DIVIDE':([6,9,10,20,],[-9,15,-10,-11,]),'PLUS':([6,8,9,10,18,19,20,],[-9,13,-6,-10,-7,-8,-11,]),'SEMICOLON':([6,7,8,9,10,17,18,19,20,],[-9,12,-4,-6,-10,-5,-7,-8,-11,]),'RPAREN':([6,8,9,10,16,17,18,19,20,],[-9,-4,-6,-10,20,-5,-7,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,4,]),'assignment':([0,2,],[2,2,]),'expression':([5,11,13,],[7,16,17,]),'term':([5,11,13,14,15,],[8,8,8,18,19,]),'factor':([5,11,13,14,15,],[9,9,9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> assignment','program',1,'p_program','main.py',49),
  ('program -> assignment program','program',2,'p_program','main.py',50),
  ('assignment -> IDENTIFIER EQUALS expression SEMICOLON','assignment',4,'p_assignment','main.py',58),
  ('expression -> term','expression',1,'p_expression','main.py',63),
  ('expression -> term PLUS expression','expression',3,'p_expression','main.py',64),
  ('term -> factor','term',1,'p_term','main.py',72),
  ('term -> factor TIMES term','term',3,'p_term','main.py',73),
  ('term -> factor DIVIDE term','term',3,'p_term','main.py',74),
  ('factor -> IDENTIFIER','factor',1,'p_factor','main.py',82),
  ('factor -> NUMBER','factor',1,'p_factor','main.py',83),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','main.py',84),
]
